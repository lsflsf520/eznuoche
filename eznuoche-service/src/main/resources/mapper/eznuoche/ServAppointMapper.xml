<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xyz.eznuoche.dao.ServAppointDao" >
  <resultMap id="BaseResultMap" type="com.xyz.eznuoche.entity.ServAppoint" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
    <result column="kehu_name" property="kehuName" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="appoint_time" property="appointTime" jdbcType="TIMESTAMP" />
    <result column="serv_content" property="servContent" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="CHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="last_uptime" property="lastUptime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="BaseColumnList" >
    id, uid, kehu_name, phone, appoint_time, serv_content, state, create_time, last_uptime
  </sql>
  <select id="findByPK" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="BaseColumnList" />
    from serv_appoint
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPK" parameterType="java.lang.Integer" >
    delete from serv_appoint
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xyz.eznuoche.entity.ServAppoint" >
    insert into serv_appoint (id, uid, kehu_name, 
      phone, appoint_time, serv_content, 
      state, create_time, last_uptime
      )
    values (#{id,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{kehuName,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{appointTime,jdbcType=TIMESTAMP}, #{servContent,jdbcType=VARCHAR}, 
      #{state,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}, #{lastUptime,jdbcType=TIMESTAMP}
      )
  </insert>
  <update id="updateByPK" parameterType="com.xyz.eznuoche.entity.ServAppoint" >
    update serv_appoint
    <set >
      <if test="uid != null" >
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="kehuName != null" >
        kehu_name = #{kehuName,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="appointTime != null" >
        appoint_time = #{appointTime,jdbcType=TIMESTAMP},
      </if>
      <if test="servContent != null" >
        serv_content = #{servContent,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUptime != null" >
        last_uptime = #{lastUptime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="insertReturnPK" useGeneratedKeys="true" keyProperty="id" parameterType="com.xyz.eznuoche.entity.ServAppoint" >
    insert into serv_appoint (id, uid, kehu_name, 
      phone, appoint_time, serv_content, 
      state, create_time, last_uptime
      )
    values (#{id,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{kehuName,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{appointTime,jdbcType=TIMESTAMP}, #{servContent,jdbcType=VARCHAR}, 
      #{state,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}, #{lastUptime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertBatch" parameterType="java.util.List" >
    insert into serv_appoint
		(id,uid,kehu_name,phone,appoint_time,serv_content,state,create_time,last_uptime)
	values 
	<foreach collection="list" item="item" separator="," index="index">
		(#{item.id,jdbcType=INTEGER},#{item.uid,jdbcType=INTEGER},#{item.kehuName,jdbcType=VARCHAR},#{item.phone,jdbcType=VARCHAR},#{item.appointTime,jdbcType=TIMESTAMP},#{item.servContent,jdbcType=VARCHAR},#{item.state,jdbcType=CHAR},#{item.createTime,jdbcType=TIMESTAMP},#{item.lastUptime,jdbcType=TIMESTAMP})
	</foreach>
  </insert>
  <delete id="batchDel" >
    		delete from serv_appoint
			where id in 
				<foreach collection="pks" item="item" separator="," open="(" close=")">
				#{item,jdbcType=INTEGER}
			</foreach>
  </delete>
  <update id="updateStatus" >
    		update serv_appoint
			set ${statusColName} = #{delStatusVal, jdbcType=INTEGER}
			where id in 
				<foreach collection="pks" item="item" separator="," open="(" close=")">
				#{item,jdbcType=INTEGER}
			</foreach>
  </update>
  <select id="findByPks" resultMap="BaseResultMap" >
    		select 
			<include refid="BaseColumnList" />
			from serv_appoint
			where id in 
				<foreach collection="pks" item="item" separator="," open="(" close=")"> 
					#{item,jdbcType=INTEGER}
				</foreach>
  </select>
  <select id="findAll" resultMap="BaseResultMap" >
    select
		<include refid="BaseColumnList"/>
	from serv_appoint
	<where>
		<trim suffixOverrides="and" >
			<if test="id != null and id > 0" >
				and id = #{id,jdbcType=INTEGER}
			</if>
			<if test="uid != null and uid > 0" >
				and uid = #{uid,jdbcType=INTEGER}
			</if>
			<if test="kehuName != null and kehuName != ''" >
				and kehu_name = #{kehuName,jdbcType=VARCHAR}
			</if>
			<if test="phone != null and phone != ''" >
				and phone = #{phone,jdbcType=VARCHAR}
			</if>
			<if test="servContent != null and servContent != ''" >
				and serv_content = #{servContent,jdbcType=VARCHAR}
			</if>
			<if test="state != null and state != ''" >
				and state = #{state,jdbcType=CHAR}
			</if>
			<!--<if test="queryParam != null">
				<if test="queryParam.startDate != null and queryParam.startDate != '' ">
					and create_time &gt;= #{queryParam.startDate, jdbcType=VARCHAR} 
				</if>
				<if test="queryParam.endDate != null and queryParam.endDate != ''">
					and create_time &lt; date_add(#{queryParam.endDate, jdbcType=VARCHAR},interval 1 day)
				</if>
				<if test="queryParam.keyword != null and queryParam.keyword != ''">
					and (name like concat('%', #{queryParam.keyword, jdbcType=VARCHAR}, '%') or other_col like concat('%', #{queryParam.keyword, jdbcType=VARCHAR}, '%') )
				</if>
			</if>-->
		</trim>
	</where>
  </select>
  
  <select id="loadMyAppoints" resultMap="BaseResultMap">
    select
		<include refid="BaseColumnList"/>
	from serv_appoint
	where uid = #{uid,jdbcType=INTEGER} and state = 'Checking' order by appoint_time asc
  </select>
  
  <!-- <select id="loadMyAppoints" resultMap="BaseResultMap">
   select <include refid="BaseColumnList"/>
   from (
    (select
		<include refid="BaseColumnList"/>
	from serv_appoint
	where uid = #{uid,jdbcType=INTEGER} and state = 'Checking' order by appoint_time asc)
	union
	(select
		<include refid="BaseColumnList"/>
	from serv_appoint
	where uid = #{uid,jdbcType=INTEGER} and state in ('Closed', 'Passed') order by state desc, appoint_time desc)
   ) t
  </select> -->
  
  
</mapper>